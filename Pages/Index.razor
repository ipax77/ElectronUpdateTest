@page "/"
@using ElectronUpdateTest.Service
@using ElectronNET.API;
@using ElectronNET.API.Entities;
@inject ElectronService  _update

<h1>Hello, world!</h1>

Welcome to your new app.

<div>
    @_update.UpdateInfo
</div>
<div>
    <button type="button" class="btn btn-primary" @onclick="Check">Check for Updates</button>
    <button type="button" class="btn btn-primary" @onclick="Check2">Check and Notify for Updates</button>
    <button type="button" class="btn btn-primary" @onclick="Update">Updates and restart</button>
</div>
@code {


    bool updateAvailable = false;
    protected override async Task OnInitializedAsync()
    {
        await _update.Resize();
    }

    async Task Check()
    {
        try
        {
            updateAvailable = await _update.CheckForUpdate();
        }
        catch (Exception e)
        {
            _update.UpdateInfo = e.Message;
        }

        await InvokeAsync(() => StateHasChanged());
    }

    async Task Check2()
    {
        try
        {
            updateAvailable = await _update.CheckForUpdate2();
        }
        catch (Exception e)
        {
            _update.UpdateInfo = e.Message;
        }

        await InvokeAsync(() => StateHasChanged());
    }

    async Task Update()
    {
        _update.QuitAndInstall();

        Task.Run(() =>
        {
            while (true)
            {
                Task.Delay(250).GetAwaiter();
                InvokeAsync(() => StateHasChanged()).GetAwaiter();
            }
        });
    }
}